# -*- after-save-hook: (org-babel-tangle); -*-
#+TITLE: DIDC Is Desktop Configuration
#+AUTHOR: tusharhero
#+EMAIL: tusharhero@sdf.org
#+STARTUP: content
#+PROPERTY: :header-args: :noweb yes :mkdirp yes

* TODO
** TODO Initial configuration
** TODO Add most options to org tables
** TODO Document everything
** TODO Probably use GNU stew or something
** TODO Better org tangling game

* LICENSE NOTICE
  :PROPERTIES:
  :VISIBILITY: folded
  :END:
  The GPLv3 License (GPLv3)

  Copyright Â© 2024 tusharhero

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
* COMMENT HELPERS
#+name: getvariable
#+begin_src elisp :var table="fontsettings"
  ;; (assoc 'fontsize
         `(quote ,(cl-mapcar (lambda (variable value)
                               `(,variable . ,value))
                             (mapcar (lambda (name) (substring-no-properties name ))
                                     (org-table-get-remote-range table "@I$1..@II$1"))
                             (mapcar (lambda (name) (substring-no-properties name ))
                                     (org-table-get-remote-range table "@I$2..@II$2"))))
         ;; )
#+end_src
* WINDOW MANAGER
** Configuration skeleton

#+begin_src conf-space :tangle config/sway/config :noweb yes
          gaps inner 10
          gaps outer 10
#+end_src
#+begin_src conf-space :tangle config/sway/config :noweb yes
   # Default config for sway
   #
   # Copy this to ~/.config/sway/config and edit it to your liking.
   #
   # Read `man 5 sway` for a complete reference.

   ### Variables
   #
   # Logo key. Use Mod1 for Alt.
   <<windowmanagerkeybindings>>
   # Your preferred terminal emulator
   set $term foot
   # Your preferred application launcher
   # Note: pass the final command to swaymsg so that the resulting window can be opened
   # on the original workspace that the command was run on.
   set $menu dmenu_path | wmenu | xargs swaymsg exec --

   ### Output configuration
   #
   # Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
   output * bg   /home/tusharhero/Documents/didc/backgrounds/man-standing-infront-of-light.jpeg fill
   ### Idle configuration
   #
   # Example configuration:
   #
   # exec swayidle -w \

   # timeout 300 'swaylock -f -c 000000' \
   #          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
   #          before-sleep 'swaylock -f -c 000000'
   #
   # This will lock your screen after 300 seconds of inactivity, then turn off
   # your displays after another 300 seconds, and turn your screens back on when
   # resumed. It will also lock your screen before your computer goes to sleep.

  <<statusbar>>
   include /etc/sway/config.d/*
#+end_src
** Status bar
:PROPERTIES:
:header-args: :noweb-ref statusbar 
:END:
#+begin_src conf-space :noweb yes
  bar {
       position top
       <<statusbarfont>>
       mode dock
       status_command while date +'%Y-%m-%d %X' ; do sleep 1; done
       height 0
       <<statusbarcolor>>
  }
#+end_src
* KEYBINDINGS
** Kmonad
Kmonad allows me to 
#+begin_src lisp :tangle config/kmonad/default.kbd :mkdirp yes
  (defcfg
      input  (device-file "/dev/input/by-id/usb-413c_Dell_KB216_Wired_Keyboard-event-kbd")
    output (uinput-sink "DIDC Kmonad output")

    cmp-seq ralt    ;; Set the compose key to `RightAlt'

    ;; Comment this is you want unhandled events not to be emitted
    fallthrough true

    ;; Set this to false to disable any command-execution in KMonad
    allow-cmd true)

  (defsrc
      esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12        ssrq slck pause
      grv  1    2    3    4    5    6    7    8    9    0    -    =  \ bspc  ins  home pgup  nlck kp/  kp*  kp-
      tab  q    w    e    r    t    y    u    i    o    p    [    ]          del  end  pgdn  kp7  kp8  kp9  kp+
      caps a    s    d    f    g    h    j    k    l    ;    '    ret                        kp4  kp5  kp6
      lsft z    x    c    v    b    n    m    ,    .    /    rctl                 up         kp1  kp2  kp3  kprt
      lctl lmet lalt           spc            ralt rmet cmp  rsft            left down rght  kp0  kp.
      )

  (deflayer div
      esc f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12        ssrq slck pause
      grv  1    2    3    4    5    6    7    8    9    0    -    =  \ bspc  ins  home pgup  nlck kp/  kp*  kp-
      tab  q    w    e    r    t    y    u    i    o    p    [    ]          del  end  pgdn  kp7  kp8  kp9  kp+
      esc  a    s    d    f    g    h    j    k    l    ;    '    ret                        kp4  kp5  kp6
      lsft z    x    c    v    b    n    m    ,    .    /    rctl                 up         kp1  kp2  kp3  kprt
      lctl lmet lalt           spc         ralt rmet cmp  rsft            left down rght  kp0  kp.
      )
#+end_src
** Window manager
#+begin_src conf-space :noweb-ref windowmanagerkeybindings
  set $mod Mod4
  # Home row direction keys, like vim
  set $left h
  set $down j
  set $up k
  set $right l

   ### Key bindings
   #
   # Basics:
   #
   # Start a terminal
   bindsym $mod+Return exec $term

   # Kill focused window
   bindsym $mod+Shift+q kill

   # Start your launcher
   bindsym $mod+d exec $menu

   # Drag floating windows by holding down $mod and left mouse button.
   # Resize them with right mouse button + $mod.
   # Despite the name, also works for non-floating windows.
   # Change normal to inverse to use left mouse button for resizing and right
   # mouse button for dragging.
   floating_modifier $mod normal

   # Reload the configuration file
   bindsym $mod+Shift+c reload

   # Exit sway (logs you out of your Wayland session)
   bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
   #
   # Moving around:
   #
   # Move your focus around
   bindsym $mod+$left focus left
   bindsym $mod+$down focus down
   bindsym $mod+$up focus up
   bindsym $mod+$right focus right
   # Or use $mod+[up|down|left|right]
   bindsym $mod+Left focus left
   bindsym $mod+Down focus down
   bindsym $mod+Up focus up
   bindsym $mod+Right focus right

   # Move the focused window with the same, but add Shift
   bindsym $mod+Shift+$left move left
   bindsym $mod+Shift+$down move down
   bindsym $mod+Shift+$up move up
   bindsym $mod+Shift+$right move right
   # Ditto, with arrow keys
   bindsym $mod+Shift+Left move left
   bindsym $mod+Shift+Down move down
   bindsym $mod+Shift+Up move up
   bindsym $mod+Shift+Right move right
   #
   # Workspaces:
   #
   # Switch to workspace
   bindsym $mod+1 workspace number 1
   bindsym $mod+2 workspace number 2
   bindsym $mod+3 workspace number 3
   bindsym $mod+4 workspace number 4
   bindsym $mod+5 workspace number 5
   bindsym $mod+6 workspace number 6
   bindsym $mod+7 workspace number 7
   bindsym $mod+8 workspace number 8
   bindsym $mod+9 workspace number 9
   bindsym $mod+0 workspace number 10
   # Move focused container to workspace
   bindsym $mod+Shift+1 move container to workspace number 1
   bindsym $mod+Shift+2 move container to workspace number 2
   bindsym $mod+Shift+3 move container to workspace number 3
   bindsym $mod+Shift+4 move container to workspace number 4
   bindsym $mod+Shift+5 move container to workspace number 5
   bindsym $mod+Shift+6 move container to workspace number 6
   bindsym $mod+Shift+7 move container to workspace number 7
   bindsym $mod+Shift+8 move container to workspace number 8
   bindsym $mod+Shift+9 move container to workspace number 9
   bindsym $mod+Shift+0 move container to workspace number 10
   # Note: workspaces can have any name you want, not just numbers.
   # We just use 1-10 as the default.
   #
   # Layout stuff:
   #
   # You can "split" the current object of your focus with
   # $mod+b or $mod+v, for horizontal and vertical splits
   # respectively.
   bindsym $mod+b splith
   bindsym $mod+v splitv

   # Switch the current container between different layout styles
   bindsym $mod+s layout stacking
   bindsym $mod+w layout tabbed
   bindsym $mod+e layout toggle split

   # Make the current focus fullscreen
   bindsym $mod+f fullscreen

   # Toggle the current focus between tiling and floating mode
   bindsym $mod+Shift+space floating toggle

   # Swap focus between the tiling area and the floating area
   bindsym $mod+space focus mode_toggle

   # Move focus to the parent container
   bindsym $mod+a focus parent
   #
   # Scratchpad:
   #
   # Sway has a "scratchpad", which is a bag of holding for windows.
   # You can send windows there and get them back later.

   # Move the currently focused window to the scratchpad
   bindsym $mod+Shift+minus move scratchpad

   # Show the next scratchpad window or hide the focused scratchpad window.
   # If there are multiple scratchpad windows, this command cycles through them.
   bindsym $mod+minus scratchpad show
   #
   # Resizing containers:
   #
   mode "resize" {
   # left will shrink the containers width
   # right will grow the containers width
   # up will shrink the containers height
   # down will grow the containers height
   bindsym $left resize shrink width 10px
   bindsym $down resize grow height 10px
   bindsym $up resize shrink height 10px
   bindsym $right resize grow width 10px

   # Ditto, with arrow keys
   bindsym Left resize shrink width 10px
   bindsym Down resize grow height 10px
   bindsym Up resize shrink height 10px
   bindsym Right resize grow width 10px

   # Return to default mode
   bindsym Return mode "default"
   bindsym Escape mode "default"
   }
   bindsym $mod+r mode "resize"

#+end_src

* FONTS
** Terminal emulator
#+begin_src conf-unix :tangle config/foot/foot.ini :noweb yes
  [main]
  font=Iosevka NF:size=14
  dpi-aware=yes
#+end_src
** Status bar
#+begin_src conf-space :noweb-ref statusbarfont
font Iosevka NF
#+end_src
* COLORS
** Terminal emulator
#+begin_src conf-unix :tangle config/foot/foot.ini
  [colors]
  background=000000
  foreground=ffffff
#+end_src
** Status bar
#+begin_src conf-space :noweb-ref statusbarcolor
colors {
       statusline #ffffff
       background #000000
       separator #ffffff
       inactive_workspace #000000 #000000 #5c5c5c
}
#+end_src
